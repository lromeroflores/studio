apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}'
  labels:
    app.kubernetes.io/name: '{{ .Release.Name }}'
    app.kubernetes.io/component: 'application'
    app.kubernetes.io/version: '{{ template "shortRevision" . }}'
    covalto.com/product: '{{ .Values.product }}'
    covalto.com/squad: '{{ .Values.squad }}'
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: '{{ .Release.Name }}'
      app.kubernetes.io/component: 'application'
  template:
    metadata:
      labels:
        app.kubernetes.io/name: '{{ .Release.Name }}'
        app.kubernetes.io/component: 'application'
        app.kubernetes.io/version: '{{ template "shortRevision" . }}'
        covalto.com/product: '{{ .Values.product }}'
        covalto.com/squad: '{{ .Values.squad }}'
    spec:
      serviceAccountName: '{{ .Release.Name }}'
      containers:
        - name: '{{ .Release.Name }}'
          image: '{{ .Values.docker.image }}:{{ template "shortRevision" . }}'
          imagePullPolicy: Always
          ports:
            - name: 'http'
              containerPort: 8080
          env:
            {{- $top := . }}
            {{- range $key, $value := .Values.env }}
            - name: '{{ $key }}'
              value: '{{ tpl $value $top }}'
            {{- end }}
          readinessProbe:
            httpGet:
              path: /api/_healthcheck
              port: http
          livenessProbe:
            httpGet:
              path: /api/_healthcheck
              port: http
          resources:
            requests:
              memory: '{{ .Values.resources_service.request.memory }}'
              cpu: '{{ .Values.resources_service.request.cpu }}'
            limits:
              memory: '{{ .Values.resources_service.limits.memory }}'
              cpu: '{{ .Values.resources_service.limits.cpu }}'
